input {
  jdbc {
   jdbc_driver_library => "/elk/logstash/sqldriver/sqljdbc_4.2/enu/jre8/sqljdbc42.jar"
   jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
   jdbc_connection_string => "jdbc:sqlserver://172.16.3.139:1433;databaseName=iMIS15"
   jdbc_user => "imis_web"
   jdbc_password => "xu3$4Q@q"
   statement => "SELECT
fbact.id
,fbact.City
,fbact.State
,fbact.Lat [latitude]
,fbact.Long [longitude]
,fbact.Match
,fbact.MatchType
,con.MemberClass
,con.MemberStatus
,(CASE WHEN con.MemberStatus = 'A' THEN 'Active_Member' ELSE 'Suspended_Member' END) [StatusDescription]
,DATEADD(hh,DATEDIFF(hh,GETDATE(), GETUTCDATE()), ISNULL((SELECT TOP 1 nl.DATE_TIME FROM Name_Log nl WHERE nl.ID = con.Id AND nl.LOG_TEXT LIKE 'IAA_Communication.FBACT:%'),
ISNULL((SELECT TOP 1 app.ActionDate FROM RMM_Application app WHERE app.ID = con.ID ORDER BY app.ActionDate), ISNULL(con.JoinDate,con.DateAdded)))) [FBActDate]
,DATEADD(hh, DATEDIFF(hh, GETDATE(), GETUTCDATE())
        ,ISNULL((SELECT TOP 1 app.ActionDate FROM RMM_Application app WHERE app.ID = con.ID ORDER BY app.ActionDate), ISNULL(con.JoinDate,con.DateAdded))) [MemberDateConverted]
,(CASE WHEN FLOOR(DATEDIFF(DAY, con.BirthDate, GETDATE()) / 365.25) BETWEEN 18 AND 22 THEN '18-22'
        WHEN FLOOR(DATEDIFF(DAY, con.BirthDate, GETDATE()) / 365.25) BETWEEN 21 AND 30 THEN '23-30'
        WHEN FLOOR(DATEDIFF(DAY, con.BirthDate, GETDATE()) / 365.25) BETWEEN 31 AND 45 THEN '31-45'
        WHEN FLOOR(DATEDIFF(DAY, con.BirthDate, GETDATE()) / 365.25) BETWEEN 46 AND 65 THEN '46-65'
        WHEN FLOOR(DATEDIFF(DAY, con.BirthDate, GETDATE()) / 365.25) BETWEEN 66 AND 110 THEN '66-110'
        ELSE 'Unknown Age' END) [AgeRange]
FROM zz_FBActMemberAddresses fbact
INNER JOIN fbv_Contact con ON con.Id = fbact.id
WHERE fbact.Lat IS NOT NULL AND fbact.Long IS NOT NULL "
   }
 }

filter{

mutate {
 add_field => { "[location][lat]" => "%{latitude}" }
 add_field => { "[location][lon]" => "%{longitude}" }
}

mutate {
 convert => {
  "[location][lat]" => "float"
  "[location][lon]" => "float"
 }
}

}


output {
 elasticsearch {
 index => "fb_fbact_geodata"
 hosts => ["elasticsearch:9200"]
 user => "elastic"
 password => "changeme"
 document_id => "%{id}"
 }
 stdout {
        codec => rubydebug
        }
}
